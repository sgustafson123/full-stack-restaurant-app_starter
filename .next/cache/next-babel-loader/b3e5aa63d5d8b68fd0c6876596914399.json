{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React, { useState, useContext } from \"react\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport fetch from \"isomorphic-fetch\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CardSection from \"./cardSection\";\nimport AppContext from \"./context\";\nimport Cookies from \"js-cookie\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CheckoutForm() {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    stripe_id: \"\"\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const appContext = useContext(AppContext);\n  function onChange(e) {\n    // set the key = to the name property equal to the value typed\n    const updateItem = data[e.target.name] = e.target.value;\n    // update the state data object\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      updateItem\n    }));\n  }\n  async function submitOrder() {\n    // event.preventDefault();\n\n    // // Use elements.getElement to get a reference to the mounted Element.\n    const cardElement = elements.getElement(CardElement);\n\n    // // Pass the Element directly to other Stripe.js methods:\n    // // e.g. createToken - https://stripe.com/docs/js/tokens_sources/create_token?type=cardElement\n    // get token back from stripe to process credit card\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const token = await stripe.createToken(cardElement);\n    const userToken = Cookies.get(\"token\");\n    const response = await fetch(`${API_URL}/orders`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        amount: Number(Math.round(appContext.cart.total + \"e2\") + \"e-2\"),\n        dishes: appContext.cart.items,\n        address: data.address,\n        city: data.city,\n        state: data.state,\n        token: token.token.id\n      })\n    });\n    if (!response.ok) {\n      setError(response.statusText);\n      console.log(\"SUCCESS\");\n    }\n\n    // OTHER stripe methods you can use depending on app\n    // // or createPaymentMethod - https://stripe.com/docs/js/payment_intents/create_payment_method\n    // stripe.createPaymentMethod({\n    //   type: \"card\",\n    //   card: cardElement,\n    // });\n\n    // // or confirmCardPayment - https://stripe.com/docs/js/payment_intents/confirm_card_payment\n    // stripe.confirmCardPayment(paymentIntentClientSecret, {\n    //   payment_method: {\n    //     card: cardElement,\n    //   },\n    // });\n  }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"jsx-1630660198\" + \" \" + \"paper\",\n    children: [/*#__PURE__*/_jsx(\"h5\", {\n      className: \"jsx-1630660198\",\n      children: \"Your information:\"\n    }), /*#__PURE__*/_jsx(\"hr\", {\n      className: \"jsx-1630660198\"\n    }), /*#__PURE__*/_jsx(FormGroup, {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          flex: \"0.90\",\n          marginRight: 10\n        },\n        className: \"jsx-1630660198\",\n        children: [/*#__PURE__*/_jsx(Label, {\n          children: \"Address\"\n        }), /*#__PURE__*/_jsx(Input, {\n          name: \"address\",\n          onChange: onChange\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(FormGroup, {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          flex: \"0.65\",\n          marginRight: \"6%\"\n        },\n        className: \"jsx-1630660198\",\n        children: [/*#__PURE__*/_jsx(Label, {\n          children: \"City\"\n        }), /*#__PURE__*/_jsx(Input, {\n          name: \"city\",\n          onChange: onChange\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          flex: \"0.25\",\n          marginRight: 0\n        },\n        className: \"jsx-1630660198\",\n        children: [/*#__PURE__*/_jsx(Label, {\n          children: \"State\"\n        }), /*#__PURE__*/_jsx(Input, {\n          name: \"state\",\n          onChange: onChange\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(CardSection, {\n      data: data,\n      stripeError: error,\n      submitOrder: submitOrder\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"1630660198\",\n      children: [\".paper{border:1px solid lightgray;box-shadow:0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12);height:550px;padding:30px;background:#fff;border-radius:6px;margin-top:90px;}\", \".form-half{-webkit-flex:0.5;-ms-flex:0.5;flex:0.5;}\", \"*{box-sizing:border-box;}\", \"body,html{background-color:#f6f9fc;font-size:18px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;}\", \"h1{color:#32325d;font-weight:400;line-height:50px;font-size:40px;margin:20px 0;padding:0;}\", \".Checkout{margin:0 auto;max-width:800px;box-sizing:border-box;padding:0 5px;}\", \"label{color:#6b7c93;font-weight:300;-webkit-letter-spacing:0.025em;-moz-letter-spacing:0.025em;-ms-letter-spacing:0.025em;letter-spacing:0.025em;}\", \"button{white-space:nowrap;border:0;outline:0;display:inline-block;height:40px;line-height:40px;padding:0 14px;box-shadow:0 4px 6px rgba(50,50,93,0.11), 0 1px 3px rgba(0,0,0,0.08);color:#fff;border-radius:4px;font-size:15px;font-weight:600;text-transform:uppercase;-webkit-letter-spacing:0.025em;-moz-letter-spacing:0.025em;-ms-letter-spacing:0.025em;letter-spacing:0.025em;background-color:#6772e5;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:all 150ms ease;-webkit-transition:all 150ms ease;transition:all 150ms ease;margin-top:10px;}\", \"form{margin-bottom:40px;padding-bottom:40px;border-bottom:3px solid #e6ebf1;}\", \"button:hover{color:#fff;cursor:pointer;background-color:#7795f8;-webkit-transform:translateY(-1px);-ms-transform:translateY(-1px);transform:translateY(-1px);box-shadow:0 7px 14px rgba(50,50,93,0.1), 0 3px 6px rgba(0,0,0,0.08);}\", \"input,.StripeElement{display:block;background-color:#f8f9fa !important;margin:10px 0 20px 0;max-width:500px;padding:10px 14px;font-size:1em;font-family:\\\"Source Code Pro\\\",monospace;box-shadow:rgba(50,50,93,0.14902) 0px 1px 3px, rgba(0,0,0,0.0196078) 0px 1px 0px;border:0;outline:0;border-radius:4px;background:white;}\", \"input::-webkit-input-placeholder{color:#aab7c4;}\", \"input::-moz-placeholder{color:#aab7c4;}\", \"input:-ms-input-placeholder{color:#aab7c4;}\", \"input::placeholder{color:#aab7c4;}\", \"input:focus,.StripeElement--focus{box-shadow:rgba(50,50,93,0.109804) 0px 4px 6px, rgba(0,0,0,0.0784314) 0px 1px 3px;-webkit-transition:all 150ms ease;-webkit-transition:all 150ms ease;transition:all 150ms ease;}\", \".StripeElement.IdealBankElement,.StripeElement.PaymentRequestButton{padding:0;}\"]\n    })]\n  });\n}\nexport default CheckoutForm;","map":null,"metadata":{},"sourceType":"module"}